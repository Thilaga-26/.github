# This workflow helps to analyze repository code for vulnerabilities, bugs, and other errors using CodeQL. 
# For that CodeQL Action is used: https://github.com/github/codeql-action
# Learn more about CodeQL at https://codeql.github.com/

name: CodeQL

on:
  workflow_call:
    inputs:
      languages:
        description: "Optional input to set languages for CodeQL check. Supported values are: 'cpp', 'csharp', 'go', 'java', 'javascript', 'typescript', 'python', 'ruby'. To set multiple languages, use the same syntax as you can see in the default value."
        required: false
        type: string
        default: "['python']"
      codeql-cfg-path:
        description: "Optional input to set path to a CodeQL config file"
        required: false
        type: string
      build-command:
        description: "Optional input to specify manual build command. The multiline syntax is supported"
        required: false
        type: string

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: write

    strategy:
      fail-fast: false
      matrix:
        language: ${{fromJson(inputs.languages)}}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{matrix.language}}
        config-file: ${{inputs.codeql-cfg-path}}

    - name: Autobuild
      if: ${{!inputs.build-command}}
      uses: github/codeql-action/autobuild@v3

    - name: Manual build
      if: ${{inputs.build-command}}
      run: |
        ${{inputs.build-command}}

    - name: Perform CodeQL Analysis
      id: codeql
      uses: github/codeql-action/analyze@v3
      with:
        output: codeql-results

    # Modified step to check for vulnerabilities in the SARIF file
    # - name: Check for vulnerabilities
    #   id: check_vulnerabilities
    #   run: |
    #     if grep -q '"kind": "problem"' codeql-results/*.sarif; then
    #       echo "Vulnerabilities found."
    #       echo "VULNERABILITIES_FOUND=true" >> $GITHUB_ENV
    #     else
    #       echo "No vulnerabilities found."
    #       echo "VULNERABILITIES_FOUND=false" >> $GITHUB_ENV
    #     fi

    # - name: Add PR comment based on vulnerabilities check
    #   if: always()
    #   uses: mshick/add-pr-comment@v2
    #   with:
    #     message: |
    #       ${{ env.VULNERABILITIES_FOUND == 'true' && '❌ Vulnerabilities found.' || '👍 No vulnerabilities found.' }}
    #     message-id: "CODEQL ANALYSIS RESULT"
    #     allow-repeats: false

        # Modified step to check for vulnerabilities in the SARIF file and set an output
    - name: Check for vulnerabilities
      id: check_vulnerabilities
      run: |
        if grep -q '"kind": "problem"' codeql-results/*.sarif; then
          echo "Vulnerabilities found."
          echo "::set-output name=message::❌ Vulnerabilities found."
        else
          echo "No vulnerabilities found."
          echo "::set-output name=message::👍 No vulnerabilities found."
        fi

    - name: Add PR comment based on vulnerabilities check
      if: always()
      uses: mshick/add-pr-comment@v2
      with:
        message: ${{ steps.check_vulnerabilities.outputs.message }}
        message-id: "CODEQL ANALYSIS RESULT"
        allow-repeats: false
